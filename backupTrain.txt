#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Mon Aug 27 14:24:21 2018

@author: keshavbachu
"""

'''
# -*- coding: utf-8 -*-
"""
Created on Sat Aug 25 08:21:36 2018

@author: Keshav Bachu
"""

import tensorflow as tf
import numpy as np

def conv_net(x_input):
    x = tf.reshape(x_input, shape = [-1, 8,8,6])
    conv1 = tf.layers.conv2d(x, 10, 1, activation=tf.nn.relu)
    conv1 = tf.layers.max_pooling2d(conv1, 4, 1)
    
    conv2 = tf.layers.conv2d(conv1, 10, 3, activation=tf.nn.relu)
    conv2 = tf.layers.max_pooling2d(conv2, 2,2)
    
    fc = tf.contrib.layers.flatten(conv2)
    fc = tf.layers.dense(fc, 100)
    
    output = tf.layers.dense(fc, 1)
    
    return output

def model(xTrain, yTrain, learning_rate = 0.01, itterations = 1000):
    conv_train = conv_net(xTrain)
    
    pred_outcome = tf.argmax(conv_train, axis = 1)
    pred_prob = tf.nn.softmax(pred_prob)
    
    loss = tf.reduce_mean(tf.nn.sparse_softmax_cross_entropy_with_logits(logits=xTrain, labels=yTrain))
    optimizer = tf.train.AdamOptimizer(learning_rate=learning_rate)
    train = optimizer.minimize(loss, global_step = tf.train.get_global_step())
    
    accuracy = tf.metrics.accuracy(labels=yTrain, predictions=pred_prob)
    
    init_op = tf.global_variables_initializer()
    with tf.Session() as sess:
        sess.run(init_op)
        
        for itter in range(itterations):
            sess.run([optimizer, loss], feed_dict = {x: xTrain, y: yTrain})
            
            acc = sess,run(accuracy, feed_dict = {x: xTrain, y: yTrain})
            
            if itter % 100 == 0:
                print("Accuracy is ", acc)
                
    print("Finished Training")

#https://github.com/aymericdamien/TensorFlow-Examples/blob/master/examples/3_NeuralNetworks/convolutional_network.py
'''